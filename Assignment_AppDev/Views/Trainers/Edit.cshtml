@model Assignment_AppDev.Models.Trainer
@{
    ViewBag.Title = "Edit";
}

<h2>Edit Trainer</h2>
@Html.ActionLink("Back", "Index")
@Html.ValidationSummary(false, "", new { @class = "text-danger" })
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(p => p.ID)


    <div class="form-group">
        @Html.LabelFor(t => t.Name)
        @Html.EditorFor(t => t.Name, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(t => t.Name)
    </div>
    <div class="form-group">
        @Html.LabelFor(p => p.TrainerID)
        @Html.EditorFor(p => p.TrainerID, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(p => p.TrainerID, "", new { @class = "text-danger" })
    </div>
    <div class="form-group">
        @Html.LabelFor(p => p.Age)
        @Html.EditorFor(p => p.Age, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(p => p.Age, "", new { @class = "text-danger" })
    </div>
    <div class="form-group">
        @Html.LabelFor(p => p.Phone)
        @Html.EditorFor(p => p.Phone, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(p => p.Phone, "", new { @class = "text-danger" })
    </div>
    <div class="form-group">
        @Html.LabelFor(p => p.Address)
        @Html.EditorFor(p => p.Address, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(p => p.Address, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
}
